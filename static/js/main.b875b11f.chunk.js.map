{"version":3,"sources":["Components/Navigation/Navbar.js","Components/Tables/ToggleList.js","Components/Tables/RTPriceTable.js","Components/Tables/RTPriceFormattedTable.js","Components/TradingChart.js","Components/Pages/Home.js","Components/Navigation/BurgerMenu.js","Components/CoinPages/CoinInfoComponents/CoinInfoHeader.js","Components/CoinPages/CoinInfoComponents/TradingViewGraph.js","Components/CoinPages/CoinInfoComponents/MarketInfo.js","Components/CoinPages/CoinInfoComponents/TradeableExchanges.js","Components/CoinPages/CoinInfo.js","Components/SearchBarHome/SearchBar.js","Components/Pages/Search.js","Components/Pages/Exchanges.js","Components/Pages/About.js","Components/Pages/Resources.js","Components/Navigation/ScrollToTop.js","Components/Glossary/Glossary.js","Components/Pages/App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","id","ToggleList","columns","onColumnToggle","toggles","style","display","gridTemplateColumns","map","column","toggle","dataField","index","Form","Check","type","inline","label","text","checked","aria-checked","onChange","RTPriceTable","SearchBar","Search","useState","coins","setCoins","callAPI","a","axios","get","APIresults","data","console","log","message","useEffect","interval","setInterval","clearInterval","show","setShow","Container","keyField","coinData","i","length","tempObject","rank","market_cap_rank","img","image","symbol","name","price","current_price","amountChange","price_change_24h","percentageChange","price_change_percentage_24h","volume","total_volume","marketCap","market_cap","valuation","fully_diluted_valuation","supply","circulating_supply","toUpperCase","push","renderCryptoData","columnToggle","search","props","margin","border","padding","searchProps","textAlign","columnToggleProps","onClick","event","height","pagination","paginationFactory","striped","bordered","hover","size","responsive","baseProps","RTPriceFormattedTable","sort","defaultSortDirection","formatter","cell","row","src","alt","width","priceFormatter","parseFloat","toFixed","toLocaleString","hidden","LineChart","require","default","coindata","setCoindata","time","setTime","chartdata","setChartData","chartdates","setChartDates","data7d","setData7d","dates7d","setDates7d","data24h","setData24h","dates24h","setDates24h","FiveCoinsDataURL","response","getFormattedDate","hour","day","newdate","date","Date","setDate","getDate","split_date","toString","split","split_time","min_sec","new_time","getCoinData","timer","setTimeout","clearTimeout","sparklines7d","sparklines24h","forEach","element","sparkline_in_7d","slice","dates_7d","dates_24h","Object","values","labels","datasets","keys","fill","backgroundColor","borderColor","marginLeft","marginTop","fontSize","fontFamily","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","Home","SlideMenu","isOpen","right","disableCloseOnEsc","disableAutoFocus","to","React","Component","CoinInfoHeader","_id","_name","_img","realTimePrice","setRealTimePrice","priceUrl","then","usd","catch","error","TradingViewGraph","range","theme","Themes","LIGHT","MarketInfo","marketData","setMarketData","key","percentIndicator","dateIndicator","spacedKey","includes","n","capitalizedKey","join","charAt","isFloat","TradeableExchanges","exchangeData","setExchangeData","dataLoaded","setDataLoaded","url","getExchangeData","tickers","trade_url","market","href","target","rel","CoinInfo","useParams","dataUrl","descriptionUrl","basicInfo","setBasicInfo","description","setDescription","en","Card","Header","Body","descriptionEl","ReactHtmlParser","parseDescription","setDisplay","suggestions","setSuggestions","aria-label","placeholder","preventDefault","value","coinsList","filter","coin","toLowerCase","ListGroup","path","children","setCoinsList","res","Exchanges","About","Resources","ScrollToTop","visible","setVisible","window","addEventListener","scrolled","document","documentElement","scrollTop","scrollTo","top","behavior","Glossary","e","getElementById","scrollIntoView","handleScroll","item","term","App","basename","process","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b875b11f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = () => {\r\n   \r\n        return ( \r\n            <nav className=\"navbar\">\r\n                <h1 >CryptoDash</h1>\r\n                <div  className=\"links\">\r\n                      <div className=\"menu\" >      \r\n                         <div className=\"menu-line\"id=\"line1\"></div>\r\n                         <div className=\"menu-line\"id=\"line2\"></div>\r\n                         <div className=\"menu-line\" id=\"line3\"></div>                      \r\n                      </div>  \r\n                </div>\r\n            </nav> \r\n         );  \r\n}\r\n \r\nexport default Navbar;","import { Form } from \"react-bootstrap\";\r\n\r\nfunction ToggleList({ columns, onColumnToggle, toggles }) {\r\n  return (\r\n    <div\r\n      className=\"text-center\"\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n      }}\r\n    >\r\n      {columns\r\n        .map((column) => ({\r\n          ...column,\r\n          toggle: toggles[column.dataField],\r\n        }))\r\n        .map((column, index) =>\r\n          index > 0 ? (\r\n            <Form.Check\r\n              type=\"switch\"\r\n              key={column.dataField}\r\n              inline\r\n              label={column.text}\r\n              id={column.dataField}\r\n              checked={column.toggle}\r\n              aria-checked={column.toggle ? \"true\" : \"false\"}\r\n              onChange={() => {\r\n                onColumnToggle(column.dataField);\r\n              }}\r\n            />\r\n          ) : null\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToggleList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToggleList from \"./ToggleList\";\r\nimport \"./RTPriceTable.css\";\r\n\r\nfunction RTPriceTable({ columns }) {\r\n  const { SearchBar } = Search;\r\n  const [coins, setCoins] = useState([]);\r\n  const url =\r\n    \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=30&page=1&sparkline=false\";\r\n\r\n  //only get top 30 coins\r\n  const callAPI = async () => {\r\n    try {\r\n      const APIresults = await axios.get(url);\r\n      setCoins(APIresults.data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAPI();\r\n\r\n    const interval = setInterval(() => {\r\n      callAPI();\r\n    }, 60000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  /* Render data by mapping & creating each 'CryptoRow' component */\r\n  let renderCryptoData = () => {\r\n    let coinData = [];\r\n    for (let i = 0; i < coins.length; i++) {\r\n      let tempObject = {\r\n        rank: coins[i].market_cap_rank,\r\n        img: coins[i].image,\r\n        symbol: coins[i].symbol,\r\n        name: coins[i].name,\r\n        price: coins[i].current_price,\r\n        amountChange: coins[i].price_change_24h,\r\n        percentageChange: coins[i].price_change_percentage_24h,\r\n        volume: coins[i].total_volume,\r\n        marketCap: coins[i].market_cap,\r\n        valuation: coins[i].fully_diluted_valuation,\r\n        supply:\r\n          coins[i].circulating_supply + \" \" + coins[i].symbol.toUpperCase(),\r\n      };\r\n      coinData.push(tempObject);\r\n    }\r\n    return coinData;\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n  function handleclick(event) {\r\n    setShow(!show);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"row justify-content-between rt-price-table-header\">\r\n        <h2 className=\"col-8 temp-title\">Real Time Performance</h2>\r\n      </div>\r\n      <div className=\"row\">\r\n        <ToolkitProvider\r\n          keyField=\"rank\"\r\n          data={renderCryptoData()}\r\n          columns={columns}\r\n          columnToggle\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <div\r\n                className=\"row justify-content-end\"\r\n                style={{\r\n                  margin: 1 + \"px\",\r\n                  border: \"none\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card card-body col-2\"\r\n                  style={{\r\n                    padding: 5 + \"px\",\r\n                    border: \"none\",\r\n                  }}\r\n                >\r\n                  <SearchBar {...props.searchProps} />\r\n                </div>\r\n                <div\r\n                  className=\"card card-body col-4\"\r\n                  style={{\r\n                    padding: 5 + \"px\",\r\n                    border: \"none\",\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className=\"card card-body col-4\"\r\n                  style={{\r\n                    padding: 5 + \"px\",\r\n                    border: \"none\",\r\n                    textAlign: \"left\",\r\n                    display: show ? \"block\" : \"none\",\r\n                  }}\r\n                >\r\n                  <ToggleList columns={columns} {...props.columnToggleProps} />\r\n                </div>\r\n                <button\r\n                  id=\"showHideColumns\"\r\n                  className=\"btn btn-light col-2\"\r\n                  onClick={(event) => handleclick(event)}\r\n                  style={{\r\n                    height: \"auto\",\r\n                    padding: 5 + \"px\",\r\n                  }}\r\n                >\r\n                  Show/Hide Columns\r\n                </button>\r\n              </div>\r\n              <hr />\r\n              <BootstrapTable\r\n                pagination={paginationFactory()}\r\n                striped\r\n                bordered\r\n                hover\r\n                size=\"sm\"\r\n                responsive\r\n                className=\"col-12\"\r\n                {...props.baseProps}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RTPriceTable;\r\n","import RTPriceTable from \"./RTPriceTable\";\r\n\r\nfunction RTPriceFormattedTable() {\r\n  const columns = [\r\n    {\r\n      dataField: \"rank\",\r\n      text: \"Rank\",\r\n      sort: true,\r\n      defaultSortDirection: \"asc\",\r\n    },\r\n    {\r\n      dataField: \"img\",\r\n      text: \"Coin\",\r\n      formatter: imgFormatter,\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"price\",\r\n      text: \"Price\",\r\n      sort: true,\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      dataField: \"amountChange\",\r\n      text: \"24hr Change\",\r\n      sort: true,\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      dataField: \"percentageChange\",\r\n      text: \"24hr % Change\",\r\n      sort: true,\r\n      formatter: percentFormatter,\r\n      hidden: true,\r\n    },\r\n    {\r\n      dataField: \"volume\",\r\n      text: \"24hr Volume\",\r\n      sort: true,\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      dataField: \"marketCap\",\r\n      text: \"Market Cap\",\r\n      sort: true,\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      dataField: \"valuation\",\r\n      text: \"Fully Diluted Val\",\r\n      sort: true,\r\n      formatter: priceFormatter,\r\n      hidden: true,\r\n    },\r\n    {\r\n      dataField: \"supply\",\r\n      text: \"Max Supply\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  function imgFormatter(cell, row) {\r\n    if (cell === null) return <p></p>;\r\n\r\n    return (\r\n      <img\r\n        src={cell}\r\n        alt={cell.symbol + \"logo\"}\r\n        className=\"coin-item\"\r\n        style={({ height: 2 + \"em\" }, { width: 2 + \"em\" })}\r\n      />\r\n    );\r\n  }\r\n\r\n  function priceFormatter(cell, row) {\r\n    if (cell === null) return <p></p>;\r\n\r\n    if (parseFloat(cell) < 999) {\r\n      return <p>{\"$\" + cell}</p>;\r\n    }\r\n    return <p>{\"$\" + parseFloat(cell.toFixed(2)).toLocaleString()}</p>;\r\n  }\r\n\r\n  function percentFormatter(cell, row) {\r\n    if (cell === null) return <p></p>;\r\n\r\n    return <p>{parseFloat(cell.toFixed(2)).toLocaleString() + \"%\"}</p>;\r\n  }\r\n\r\n  return <RTPriceTable columns={columns} />;\r\n}\r\n\r\nexport default RTPriceFormattedTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nexport default function LineChart (){\r\n    const axios = require('axios').default;  \r\n    const[coindata,setCoindata] = useState([]);\r\n    const[time,setTime] = useState([]);\r\n\r\n    const[chartdata,setChartData] = useState([]);\r\n    const[chartdates,setChartDates] = useState([]);\r\n    const[data7d,setData7d] = useState([]);\r\n    const[dates7d,setDates7d] = useState([]);\r\n    const[data24h,setData24h] = useState([]);\r\n    const[dates24h,setDates24h] = useState([]);\r\n\r\n    const FiveCoinsDataURL = ('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2Cethereum%2Cbinancecoin%2Ctether%2Ccardano&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=%271h%2C24h%27');\r\n  \r\n    useEffect(() => {\r\n        getCoinData();\r\n        const timer = setTimeout(() =>{\r\n            setTime(time +1);\r\n        },600000);\r\n        return () => clearTimeout(timer);\r\n    },[time]);\r\n    \r\n    \r\n    async function getCoinData(){\r\n       try{\r\n           const response = await axios.get(FiveCoinsDataURL); \r\n           setCoindata(response.data);     \r\n       }catch(error){\r\n           console.log(error);\r\n       }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let sparklines7d = {};\r\n        let sparklines24h = {};\r\n\r\n        coindata.forEach((element) => {\r\n            sparklines7d[element.name] = element.sparkline_in_7d.price;\r\n            let length = sparklines7d[element.name].length;\r\n            sparklines24h[element.name] = [24];\r\n            sparklines24h[element.name] = sparklines7d[element.name].slice(length-24);           \r\n        });\r\n        setData24h(sparklines24h);\r\n        setData7d(sparklines7d);\r\n\r\n    },[coindata])\r\n\r\n    function getFormattedDate(hour, day, newdate){\r\n        \r\n        let date = new Date();\r\n        date.setDate(date.getDate() - day);\r\n        let split_date = date.toString().split(\" \");\r\n        let split_time = split_date[4].toString().split(':');\r\n        let min_sec = split_time[1] + ':' + split_time[2];  \r\n\r\n        if(newdate.length === 0)\r\n            hour = split_time[0];    \r\n        \r\n        let new_time = hour + ':' + min_sec;\r\n        newdate = split_date[1] + ' ' + split_date[2] + ' ('+ new_time + ')';\r\n        hour++;\r\n        if(hour === 24){\r\n            hour = '00';\r\n            day--;\r\n        }\r\n        return {hour,day,newdate};\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let dates_7d =[''];\r\n        let dates_24h = [''];\r\n\r\n        if(data7d.length !== 0){\r\n            let date = {\r\n                hour:0,\r\n                day:7,\r\n                newdate:''\r\n            }\r\n        \r\n            let length;\r\n            if(Object.values(data7d)[0])\r\n                length = (Object.values(data7d)[0].length);\r\n            \r\n            date = getFormattedDate(date.hour,date.day,date.newdate);\r\n\r\n            for(let i = 0; i < length; i++){\r\n                date = getFormattedDate(date.hour,date.day,date.newdate);\r\n                dates_7d.push(date.newdate);\r\n            }\r\n            dates_24h = dates_7d.slice(length-23);\r\n           \r\n            setDates24h(dates_24h);\r\n            setDates7d(dates_7d);\r\n            setChartDates(dates_7d);\r\n            setChartData(data7d);\r\n\r\n        }\r\n    },[data7d])\r\n\r\n    function handle24h(){\r\n        setChartData(data24h);\r\n        setChartDates(dates24h);\r\n    }\r\n    function handle7d(){\r\n        setChartData(data7d);\r\n        setChartDates(dates7d);\r\n    }\r\n    const data = {\r\n        labels: Object.values(chartdates),\r\n        datasets: [\r\n          {\r\n            label: (Object.keys(chartdata)[0]),\r\n            data: (Object.values(chartdata)[0]),\r\n            fill: false,\r\n            backgroundColor: 'rgb(242, 169, 0)', \r\n            borderColor: 'rgba(77, 77, 78,0.2)',\r\n          },\r\n          {\r\n            label: (Object.keys(chartdata)[1]),\r\n            data: (Object.values(chartdata)[1]),\r\n            fill: false,\r\n            backgroundColor: 'rgb(60, 60, 61)',\r\n            borderColor: 'rgba(201, 157, 102,0.2)',\r\n          },\r\n          {\r\n            label: (Object.keys(chartdata)[4]),\r\n            data: (Object.values(chartdata)[4]),\r\n            fill: false,\r\n            backgroundColor: 'rgb(243, 186, 47)',\r\n            borderColor: 'rgba(48, 55, 54,0.2)',\r\n          },\r\n          {\r\n            label: (Object.keys(chartdata)[3]),\r\n            data: (Object.values(chartdata)[3]),\r\n            fill: false,\r\n            backgroundColor: 'rgb(42, 113, 208)',\r\n            borderColor: 'rgba(0,0,0,0.2)',\r\n          },\r\n          {\r\n            label: (Object.keys(chartdata)[2]),\r\n            data: (Object.values(chartdata)[2]),\r\n            fill: false,\r\n            backgroundColor: 'rgb(80,175,149)',\r\n            borderColor: 'rgba(92,91,94,0.2)',\r\n          },\r\n        ],\r\n      };\r\n      \r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },          \r\n      }],\r\n    },\r\n  };\r\n  return(\r\n    <div className=\"trading-chart\" style={{height:\"400px\",width:\"700px\",marginLeft:\"60px\",marginTop:\"50px\"}}>\r\n      <div className='header'>\r\n        <h1 className='title' style={{fontSize:\"25px\", fontFamily:\"sans-serif\"}}>Cryptocurrency Trading Rates</h1>\r\n        <button onClick={handle24h}>24h</button>\r\n        <button onClick={handle7d}>7d</button>\r\n      </div>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import RTPriceFormattedTable from \"../Tables/RTPriceFormattedTable\";\r\nimport TradingChart from \"../TradingChart\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n      <div>\r\n          <RTPriceFormattedTable />\r\n          <TradingChart />\r\n      </div>\r\n  \r\n    );\r\n\r\n};\r\n\r\nexport default Home;\r\n","import { slide as Menu } from \"react-burger-menu\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class SlideMenu extends React.Component {\r\n  render() {\r\n    return (\r\n      <Menu isOpen={false} right disableCloseOnEsc disableAutoFocus>\r\n        <Link to=\"/\" id=\"home\" className=\"menu-item\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/search\" id=\"search\" className=\"menu-item\">\r\n          Search\r\n        </Link>\r\n        <Link to=\"/exchanges\" id=\"exchanges\" className=\"menu-item\">\r\n          Exchanges\r\n        </Link>\r\n        <Link to=\"/glossary\" id=\"glossary\" className=\"menu-item\">\r\n          Glossary \r\n        </Link>\r\n        <Link to=\"/about\" id=\"about\" className=\"menu-item\">\r\n          About\r\n        </Link>\r\n        <Link to=\"/resources\" id=\"resources\" className=\"menu-item\">\r\n          Resources\r\n        </Link>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport '../CoinInfo.css';\r\nconst CoinInfoHeader = ({_id, _name, _img}) =>{\r\n    // Not set to real time yet. Just grabs real time data on initial load.\r\n    const [realTimePrice, setRealTimePrice] = useState();\r\n    \r\n    useEffect(() =>{\r\n        let priceUrl = 'https://api.coingecko.com/api/v3/simple/price?ids=' + _id + '&vs_currencies=usd';\r\n        axios.get(priceUrl)\r\n        .then(response => {\r\n            setRealTimePrice(response.data[_id].usd)\r\n        })\r\n        .catch(error => console.log(error + \": Cannot get realtime price\"));\r\n    }, [_id, _name, realTimePrice]);\r\n  \r\n    return (\r\n        <div className=\"result-header-container\" key={_id}>\r\n            <div className=\"image-name-container\">\r\n                <span><img src={_img} alt={_id + ' logo'} /></span>\r\n                <span >{_name}</span>\r\n            </div>\r\n            <div className=\"price-percent-container\">\r\n                <span >{\"$\" + realTimePrice}</span> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinInfoHeader","import React from 'react';\r\nimport TradingViewWidget, {Themes} from 'react-tradingview-widget';\r\n\r\nconst TradingViewGraph = ({symbol}) =>{\r\n    return(\r\n       <div key={symbol + \"_graph\"}>\r\n            <TradingViewWidget \r\n            symbol={symbol + \"USD\"} \r\n            range=\"all\" \r\n            interval=\"D\" \r\n            theme={Themes.LIGHT}/>\r\n       </div>\r\n   ) \r\n}\r\n\r\nexport default TradingViewGraph;","import React, {useEffect, useState} from 'react';\r\n\r\nconst MarketInfo = (props) =>{\r\n    const [marketData, setMarketData] = useState();\r\n\r\n    useEffect(() => {\r\n        setMarketData(props.data);\r\n    }, [props.data]);\r\n\r\n    // Helper functions\r\n    function isFloat(n) {\r\n        return n === +n && n !== (n|0);\r\n    }\r\n    \r\n    function isInteger(n) {\r\n        return n === +n && n === (n|0);\r\n    }\r\n\r\n    return(\r\n        <div className=\"market-data-container\">\r\n            <div className=\"data-container\">\r\n                {marketData && Object.keys(marketData).slice(5, 24).map((key, index) =>{\r\n                    console.log(key + \": \" + marketData[key]);\r\n                    // Will be the name of the market data item\r\n                    let percentIndicator = false;\r\n                    let dateIndicator = false;\r\n                    let spacedKey = key.split('_');\r\n                    if(spacedKey.includes('percentage')){\r\n                        percentIndicator = true;\r\n                    }\r\n                    else if(spacedKey.includes('date')){\r\n                        dateIndicator = true;\r\n                    }\r\n                    spacedKey = spacedKey.join(' ');\r\n                    let capitalizedKey = spacedKey.charAt(0).toUpperCase() + spacedKey.slice(1);\r\n\r\n                    // Set to N/A if null\r\n                    if(marketData[key] === null){\r\n                        return (\r\n                            <div>\r\n                                <span className=\"data-key\">{capitalizedKey + \": \"}</span>\r\n                                <span className=\"data-value\">N/A</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else if(dateIndicator){\r\n                        let date = marketData[key].split('T');\r\n                        return (\r\n                            <div>\r\n                                <span className=\"data-key\">{capitalizedKey + \": \"}</span>\r\n                                <span className=\"data-value\">{date[0]}</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else if(isInteger(marketData[key])) {\r\n                        return (\r\n                            <div>\r\n                                <span className=\"data-key\">{capitalizedKey + \": \"}</span>\r\n                                <span className=\"data-value\">{marketData[key].toLocaleString()}</span>\r\n                            </div>\r\n                        )\r\n\r\n                    }\r\n                    else if(isFloat(marketData[key])) {\r\n                        if(percentIndicator){\r\n                            return (\r\n                                <div>\r\n                                    <span className=\"data-key\">{capitalizedKey + \": \"}</span>\r\n                                    <span className=\"data-value\">{marketData[key].toFixed(3) + \"%\"}</span>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <div>\r\n                                <span className=\"data-key\">{capitalizedKey + \": \"}</span>\r\n                                <span className=\"data-value\">{parseFloat(marketData[key].toFixed(20)).toLocaleString()}</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <span className='data-key'>{capitalizedKey + \": \"}</span>\r\n                            <span className=\"data-value\">{marketData[key]}</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarketInfo;","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TradeableExchanges = ({id}) =>{\r\n    const [exchangeData, setExchangeData] = useState({});\r\n    const [dataLoaded, setDataLoaded] = useState(false);\r\n    const url = 'https://api.coingecko.com/api/v3/coins/' + id + '?tickers=true&market_data=false&community_data=false&developer_data=false&sparkline=false';\r\n\r\n\r\n    async function getExchangeData(){\r\n        const response = await axios.get(url);\r\n        return response.data;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getExchangeData()\r\n        .then(data => {\r\n            setExchangeData(data.tickers);\r\n            setDataLoaded(true);\r\n        })\r\n        .catch(error => {\r\n            console.log(error.message + \" for \" + id);\r\n            setDataLoaded(false);\r\n        });\r\n    }, [id]);\r\n            \r\n    return (\r\n        <div className=\"tradeable-exchanges-container\">\r\n            <ul>\r\n                {dataLoaded && Object.keys(exchangeData).slice(0, 4).map(key => {\r\n                    let trade_url = exchangeData[key].trade_url;\r\n                    let name = exchangeData[key].market.name;\r\n                    return (<li><a href={trade_url} target=\"_blank\" rel=\"noopener noreferrer\" >{name}</a></li>)\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default TradeableExchanges;","import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport CoinInfoHeader from './CoinInfoComponents/CoinInfoHeader';\r\nimport TradingViewGraph from './CoinInfoComponents/TradingViewGraph';\r\nimport MarketInfo from './CoinInfoComponents/MarketInfo';\r\nimport TradeableExchanges from './CoinInfoComponents/TradeableExchanges';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport {Card} from 'react-bootstrap';\r\nimport './CoinInfo.css';\r\n\r\nconst CoinInfo = (props) =>{\r\n    const {id} = useParams();\r\n    const dataUrl = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=' + id + '&order=market_cap_desc&per_page=100&page=1&sparkline=false';\r\n    const descriptionUrl = 'https://api.coingecko.com/api/v3/coins/' + id +'?tickers=false&market_data=false&developer_data=false';\r\n    const [basicInfo, setBasicInfo] = useState({});\r\n    const [description, setDescription] = useState(\"\");\r\n    \r\n    /* get image and name based on id */\r\n    useEffect(() => {\r\n        axios.get(dataUrl)\r\n        .then(response =>{\r\n            setBasicInfo(response.data[0]);\r\n        })\r\n        .catch(error => console.log(error));\r\n        axios.get(descriptionUrl)\r\n        .then(response =>{\r\n            setDescription(response.data.description.en);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, [dataUrl, descriptionUrl]);\r\n\r\n    /* Check if there is a discription */\r\n    const checkDescription = () =>{\r\n        if(description === \"\" || description === null) return false;\r\n        return true;\r\n    }\r\n\r\n    const parseDescription = () =>{\r\n        const descriptionEl = description\r\n        .split(\"https://www.coingecko.com/en/coins/\")\r\n        .join(\"/frontend-cryptodash/search/\")\r\n        .split(\"/coins/\")\r\n        .join(\"/frontend-cryptodash/search/\");\r\n\r\n        return ReactHtmlParser(descriptionEl);\r\n    }\r\n    \r\n    /* use flex, divide into at least 3 different divs*/\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Header className=\"result-header\">\r\n                    <CoinInfoHeader _id={id} _name={basicInfo.name} _img={basicInfo.image}/>\r\n                </Card.Header> \r\n                <Card.Body>\r\n                    <TradingViewGraph symbol={basicInfo.symbol} />\r\n                </Card.Body>\r\n            </Card>\r\n            <Card>\r\n                <Card.Header>\r\n                    <h1>Market Data</h1> \r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <MarketInfo data={basicInfo}/>\r\n                </Card.Body> \r\n            </Card>\r\n            <Card>\r\n                <Card.Header>\r\n                    <h1>Description</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"description-box\">\r\n                        {checkDescription() ? <div>{parseDescription()}</div> : null}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card>\r\n                <Card.Header>\r\n                    <h1>Exchanges</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <TradeableExchanges id={id} />\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CoinInfo;","import React, {useState} from 'react';\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport \"./SearchBar.css\";\r\nimport CoinInfo from '../CoinPages/CoinInfo';\r\nimport {Link, Route, Switch} from 'react-router-dom';\r\n\r\nconst SearchBar = (props) =>{\r\n    /* display may not be necessary, just hides suggestions when no input field*/\r\n    const [display, setDisplay] = useState(true);\r\n    /* list of suggestions displayed */\r\n    const [suggestions, setSuggestions] = useState([]);\r\n\r\n    const inputOnChange = (event) =>{\r\n        event.preventDefault();\r\n        /* if no input, then hide suggestions */\r\n        if(event.target.value.length === 0){\r\n            setDisplay(false);\r\n        }\r\n        else{\r\n            setDisplay(true);\r\n            setSuggestions(props.coinsList.filter(coin => \r\n                (coin.name.toLowerCase().includes(event.target.value.toLowerCase()) || \r\n                coin.symbol.toLowerCase().includes(event.target.value.toLowerCase()) || \r\n                coin.id.toLowerCase().includes(event.target.value.toLowerCase()))))\r\n        }\r\n    }\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <div className=\"search-box\">\r\n            <div id=\"home-search-container\">\r\n                <input type=\"text\" className=\"form-control\" aria-label=\"Default\" \r\n                id=\"home-search\" placeholder=\"Search Crypto\" onChange={inputOnChange} />\r\n            </div>\r\n            <div id=\"suggestions-container\">\r\n                <ListGroup>\r\n                    {display && suggestions.slice(0, 6).map((coin, index) =>(\r\n                        <Link to={\"/search/\" + coin.id} key={coin.id}>\r\n                        <button type=\"button\" \r\n                        className=\"list-group-item list-group-item-action\" \r\n                        key={coin.id} \r\n                        onClick={() => {\r\n                            // Still need to work on re renders\r\n                            setDisplay(false);\r\n                        }}\r\n                        >\r\n                            <div className=\"name-container\">\r\n                                <span>\r\n                                    <img src={coin.image} alt={coin.name + \" logo\"}/>\r\n                                </span>\r\n                                <span className=\"name-span\">{coin.name}</span>\r\n                            </div>\r\n                            <div className=\"symbol-container\">\r\n                                <span >{coin.symbol.toUpperCase()}</span>\r\n                            </div>\r\n                        </button>\r\n                       </Link>\r\n                    ))}\r\n                </ListGroup>\r\n            </div>\r\n            </div>\r\n                <Switch>\r\n                    <Route path='/search/:id' children={<CoinInfo coinsList={props.coinsList}/>} />\r\n                </Switch>\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBar;\r\n\r\n","import './App.css';\r\nimport SearchBar from '../SearchBarHome/SearchBar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Search() {\r\n    let [coinsList, setCoinsList] = useState([]); \r\n    const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false';\r\n\r\n    /* Use effect in replace of componentDidMount() w/ Hooks */\r\n    useEffect(() => {\r\n        axios.get(url)\r\n        .then(res =>{\r\n            setCoinsList(res.data);\r\n        })\r\n        .catch(error => console.log(error))\r\n    }, []);  \r\n\r\n  return (\r\n    <div className=\"Search\">\r\n      <SearchBar coinsList={coinsList} />\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Search;","const Exchanges = () => {\r\n    return ( \r\n        <p>Exchanges Page</p>\r\n     );\r\n}\r\n \r\nexport default Exchanges;","const About = () => {\r\n    return ( \r\n        <p>About Page</p>\r\n     );\r\n}\r\n \r\nexport default About;","const Resources = () => {\r\n    return ( \r\n        <p>Resources Page</p>\r\n     );\r\n}\r\n \r\nexport default Resources;","import React, {useState} from 'react';\r\nimport {FaArrowCircleUp} from 'react-icons/fa';\r\n  \r\nconst ScrollToTop = () =>{\r\n  \r\n  const [visible, setVisible] = useState(false)\r\n  \r\n  const toggleVisible = () => {\r\n    const scrolled = document.documentElement.scrollTop;\r\n    if (scrolled > 300){\r\n      setVisible(true)\r\n    } \r\n    else if (scrolled <= 300){\r\n      setVisible(false)\r\n    }\r\n  };\r\n  \r\n  const scrollToTop = () =>{\r\n    window.scrollTo({\r\n      top: 0, \r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n  \r\n  window.addEventListener('scroll', toggleVisible);\r\n  \r\n  return (\r\n    <button className=\"go-to-top\">\r\n     <FaArrowCircleUp onClick={scrollToTop} \r\n     style={{display: visible ? 'inline' : 'none'}} />\r\n    </button>\r\n  );\r\n}\r\n  \r\nexport default ScrollToTop;","import React from 'react';\r\nimport './Glossary.css';\r\nimport data from './Glossary.json';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Glossary = () =>{\r\n    /* When letter is clicked at top, will scroll to\r\n    designated element containing letter in page */\r\n    const handleScroll = (e) =>{\r\n        document.getElementById(\"item-\" + e.target.value).scrollIntoView();\r\n    }\r\n\r\n    return(\r\n        <div className=\"glossary-container\">\r\n            <div className=\"glossary-header-container\">\r\n                {Object.keys(data).map(key => {\r\n                    return(\r\n                        <span><input type=\"button\" className=\"letter-nav bg-light\" value={key} onClick={e => handleScroll(e)}/></span>\r\n                    )\r\n                })}\r\n            </div>\r\n                {Object.keys(data).map(key => {\r\n                    return(\r\n                        <div className=\"glossary-body-container\">\r\n                            <div className={\"item\"} id={\"item-\" + key}><h1>{key}</h1></div>\r\n                            <div className={\"item-definitions\"}>\r\n                                {Object.keys(data[key]).map(item => {\r\n                                    return(\r\n                                        <div className={\"definition-\" + data[key][item].term + \"-container\"}>\r\n                                            <div className={\"term\"}><span>{data[key][item].term + \":\"}</span></div>\r\n                                            <div className={\"definition\"}><span>{data[key][item].description}</span></div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n        </div>\r\n    )\r\n}\r\nexport default Glossary;","import \"./App.css\";\r\nimport Navbar from \"../Navigation/Navbar\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport BurgerMenu from \"../Navigation/BurgerMenu\";\r\nimport Search from \"./Search\";\r\nimport Exchanges from \"./Exchanges\";\r\nimport About from \"./About\";\r\nimport Resources from \"./Resources\";\r\nimport ScrollToTop from \"../Navigation/ScrollToTop\";\r\nimport Glossary from \"../Glossary/Glossary\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Navbar />\r\n        <BurgerMenu />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/search\">\r\n            <Search />\r\n          </Route>\r\n          <Route path=\"/exchanges\">\r\n            <Exchanges />\r\n          </Route>\r\n          <Route path=\"/glossary\">\r\n            <Glossary />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/resources\">\r\n            <Resources />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      <div className=\"content\"></div>\r\n      <ScrollToTop />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/Pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}