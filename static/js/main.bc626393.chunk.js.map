{"version":3,"sources":["Components/Navigation/Navbar.js","Components/Tables/ToggleList.js","Components/Tables/RTPriceTable.js","Components/Tables/FavoriteCoins.js","Components/Tables/RTPriceFormattedTable.js","Components/TradingChart.js","Components/Pages/Home.js","Components/Navigation/BurgerMenu.js","Components/CoinPages/CoinInfoComponents/CoinInfoHeader.js","Components/CoinPages/CoinInfoComponents/TradingViewGraph.js","Components/CoinPages/CoinInfoComponents/MarketInfo.js","Components/CoinPages/CoinInfoComponents/TradeableExchanges.js","Components/CoinPages/CoinInfo.js","Components/SearchBarHome/SearchBar.js","Components/Pages/Search.js","Components/Exchanges/CryptoExchanges.js","Components/Pages/Exchanges.js","Components/Pages/About.js","Components/Pages/Resources.js","Components/Navigation/ScrollToTop.js","Components/Glossary/Glossary.js","Components/Pages/Contact.js","Components/Pages/App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","id","ToggleList","columns","onColumnToggle","toggles","style","display","gridTemplateColumns","map","column","toggle","dataField","index","Form","Check","type","inline","label","text","checked","aria-checked","onChange","RTPriceTable","SearchBar","Search","useState","coins","setCoins","callAPI","a","axios","get","APIresults","data","console","log","message","useEffect","interval","setInterval","clearInterval","show","setShow","Container","keyField","coinData","i","length","tempObject","rank","market_cap_rank","img","image","symbol","name","price","current_price","amountChange","price_change_24h","percentageChange","price_change_percentage_24h","volume","total_volume","marketCap","market_cap","valuation","fully_diluted_valuation","supply","circulating_supply","toUpperCase","push","renderCryptoData","columnToggle","search","props","margin","border","padding","searchProps","textAlign","columnToggleProps","onClick","event","height","pagination","paginationFactory","striped","bordered","hover","size","responsive","baseProps","FavoriteCoins","faves","setFavoriteCoins","Carousel","slide","fade","Item","Card","Header","Body","Title","Text","row","Link","coinRank","changed","tempFaves","splice","removeCard","RTPriceFormattedTable","favoriteCoins","formatter","cell","handleclick","backgroundColor","setIconColor","iconColor","icon","faStar","color","sort","defaultSortDirection","src","alt","width","href","priceFormatter","parseFloat","toFixed","toLocaleString","hidden","LineChart","require","default","coindata","setCoindata","time","setTime","chartdata","setChartData","chartdates","setChartDates","data7d","setData7d","dates7d","setDates7d","data24h","setData24h","dates24h","setDates24h","FiveCoinsDataURL","response","getFormattedDate","hour","day","newdate","date","Date","setDate","getDate","split_date","toString","split","split_time","min_sec","new_time","getCoinData","timer","setTimeout","clearTimeout","sparklines7d","sparklines24h","forEach","element","sparkline_in_7d","slice","dates_7d","dates_24h","Object","values","labels","datasets","keys","fill","borderColor","marginLeft","marginTop","fontSize","fontFamily","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","Home","SlideMenu","isOpen","right","disableCloseOnEsc","disableAutoFocus","to","React","Component","CoinInfoHeader","_id","_name","_img","realTimePrice","setRealTimePrice","priceUrl","then","usd","catch","error","TradingViewGraph","range","theme","Themes","LIGHT","MarketInfo","marketData","setMarketData","key","percentIndicator","dateIndicator","spacedKey","includes","n","capitalizedKey","join","charAt","isFloat","TradeableExchanges","exchangeData","setExchangeData","dataLoaded","setDataLoaded","url","getExchangeData","tickers","trade_url","market","target","rel","PageNotFound","CoinInfo","useParams","dataUrl","descriptionUrl","basicInfo","setBasicInfo","description","setDescription","en","undefined","descriptionEl","ReactHtmlParser","parseDescription","setDisplay","suggestions","setSuggestions","aria-label","placeholder","preventDefault","value","coinsList","filter","coin","toLowerCase","ListGroup","path","children","setCoinsList","res","ExchangesTable","exchangedata","setExchangedata","setData","exchangeurl","getExchanges","logo","site","accessor","Cell","showPagination","defaultPageSize","Exchanges","About","Resources","ScrollToTop","visible","setVisible","window","addEventListener","scrolled","document","documentElement","scrollTop","scrollTo","top","behavior","marginBottom","Glossary","e","getElementById","scrollIntoView","handleScroll","item","term","Contact","emailAddress","setEmailAdress","fullName","setFullName","setMessage","sendEmail","templateParams","to_name","from_name","fullname","email","match","alert","emailjs","send","result","status","Group","Label","Control","as","required","aria-describedby","rows","Button","variant","App","basename","process","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc626393.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = () => {\r\n   \r\n        return ( \r\n            <nav className=\"navbar\">\r\n                <h1 >CryptoDash</h1>\r\n                <div  className=\"links\">\r\n                      <div className=\"menu\" >      \r\n                         <div className=\"menu-line\"id=\"line1\"></div>\r\n                         <div className=\"menu-line\"id=\"line2\"></div>\r\n                         <div className=\"menu-line\" id=\"line3\"></div>                      \r\n                      </div>  \r\n                </div>\r\n            </nav> \r\n         );  \r\n}\r\n \r\nexport default Navbar;","import { Form } from \"react-bootstrap\";\r\n\r\nfunction ToggleList({ columns, onColumnToggle, toggles }) {\r\n  return (\r\n    <div\r\n      className=\"text-center\"\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n      }}\r\n    >\r\n      {columns\r\n        .map((column) => ({\r\n          ...column,\r\n          toggle: toggles[column.dataField],\r\n        }))\r\n        .map((column, index) =>\r\n          index > 1 ? (\r\n            <Form.Check\r\n              type=\"switch\"\r\n              key={column.dataField}\r\n              inline\r\n              label={column.text}\r\n              id={column.dataField}\r\n              checked={column.toggle}\r\n              aria-checked={column.toggle ? \"true\" : \"false\"}\r\n              onChange={() => {\r\n                onColumnToggle(column.dataField);\r\n              }}\r\n            />\r\n          ) : null\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToggleList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToggleList from \"./ToggleList\";\r\nimport \"./RTPriceTable.css\";\r\n\r\nfunction RTPriceTable({ columns }) {\r\n  const { SearchBar } = Search;\r\n  const [coins, setCoins] = useState([]);\r\n  const url =\r\n    \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=30&page=1&sparkline=false\";\r\n\r\n  //only get top 30 coins\r\n  const callAPI = async () => {\r\n    try {\r\n      const APIresults = await axios.get(url);\r\n      setCoins(APIresults.data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAPI();\r\n\r\n    const interval = setInterval(() => {\r\n      callAPI();\r\n    }, 60000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  /* Render data by mapping & creating each 'CryptoRow' component */\r\n  let renderCryptoData = () => {\r\n    let coinData = [];\r\n    for (let i = 0; i < coins.length; i++) {\r\n      let tempObject = {\r\n        rank: coins[i].market_cap_rank,\r\n        img: coins[i].image,\r\n        symbol: coins[i].symbol,\r\n        name: coins[i].name,\r\n        price: coins[i].current_price,\r\n        amountChange: coins[i].price_change_24h,\r\n        percentageChange: coins[i].price_change_percentage_24h,\r\n        volume: coins[i].total_volume,\r\n        marketCap: coins[i].market_cap,\r\n        valuation: coins[i].fully_diluted_valuation,\r\n        supply:\r\n          coins[i].circulating_supply + \" \" + coins[i].symbol.toUpperCase(),\r\n        id: coins[i].id,\r\n      };\r\n      coinData.push(tempObject);\r\n    }\r\n    return coinData;\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n  function handleclick(event) {\r\n    setShow(!show);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"row justify-content-between rt-price-table-header\">\r\n        <h2 className=\"col-8 temp-title\">Real Time Performance</h2>\r\n      </div>\r\n      <div className=\"row\">\r\n        <ToolkitProvider\r\n          keyField=\"rank\"\r\n          data={renderCryptoData()}\r\n          columns={columns}\r\n          columnToggle\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <div\r\n                className=\"row justify-content-end\"\r\n                style={{\r\n                  margin: 1 + \"px\",\r\n                  border: \"none\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card card-body col-2\"\r\n                  style={{\r\n                    padding: 5 + \"px\",\r\n                    border: \"none\",\r\n                  }}\r\n                >\r\n                  <SearchBar {...props.searchProps} />\r\n                </div>\r\n                <div\r\n                  className=\"card card-body col-4\"\r\n                  style={{\r\n                    padding: 5 + \"px\",\r\n                    border: \"none\",\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className=\"card card-body col-4\"\r\n                  style={{\r\n                    padding: 5 + \"px\",\r\n                    border: \"none\",\r\n                    textAlign: \"left\",\r\n                    display: show ? \"block\" : \"none\",\r\n                  }}\r\n                >\r\n                  <ToggleList columns={columns} {...props.columnToggleProps} />\r\n                </div>\r\n                <button\r\n                  id=\"showHideColumns\"\r\n                  className=\"btn btn-light col-2\"\r\n                  onClick={(event) => handleclick(event)}\r\n                  style={{\r\n                    height: \"auto\",\r\n                    padding: 5 + \"px\",\r\n                  }}\r\n                >\r\n                  Show/Hide Columns\r\n                </button>\r\n              </div>\r\n              <hr />\r\n              <BootstrapTable\r\n                pagination={paginationFactory()}\r\n                striped\r\n                bordered\r\n                hover\r\n                size=\"sm\"\r\n                responsive\r\n                className=\"col-12\"\r\n                {...props.baseProps}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      </div>\r\n      <hr></hr>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RTPriceTable;\r\n","import Carousel from \"react-bootstrap/Carousel\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction FavoriteCoins({ faves, setFavoriteCoins }) {\r\n  function removeCard(coinRank) {\r\n    var changed = false;\r\n    var tempFaves = faves;\r\n\r\n    for(var i = 0; i < faves.length; i++){\r\n      if(faves[i].row.rank === coinRank){\r\n        tempFaves.splice(i, 1);\r\n        changed = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(changed) {\r\n      setFavoriteCoins([...tempFaves]);\r\n    }\r\n  }\r\n\r\n  function createSlides() {\r\n    if (faves.length === 0) {\r\n      return (\r\n        <Carousel.Item>\r\n          <Card\r\n            className=\"default-faves d-block w-75\"\r\n            style={{ margin: \"auto\" }}\r\n          >\r\n            <Card.Header>Your faves will go here!</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Favorite Coins</Card.Title>\r\n              <Card.Text>\r\n                You haven't added any favorites yet! Add a coin to your\r\n                favorites by clicking a star in one of the rows above.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Carousel.Item>\r\n      );\r\n    }\r\n\r\n    let newCarousel = faves.map(data => {\r\n      return(\r\n      <Carousel.Item key={data.row.rank}>\r\n          <Card\r\n          className=\"default-faves d-block w-75\"\r\n          style={{ margin: \"auto\" }}\r\n        >\r\n          <Card.Header>Favorite Coins</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>{data.row.name}</Card.Title>\r\n            <Card.Text>\r\n              Price: ${data.row.price}<br></br>\r\n              Rank: {data.row.rank}<br></br>\r\n              Percentage Change: {data.row.percentageChange}&#37;<br></br>\r\n              Market Cap: {data.row.marketCap}\r\n            </Card.Text>\r\n            <Card.Link>More Info</Card.Link>\r\n            <Card.Link onClick={() => removeCard(data.row.rank)}>Remove</Card.Link>\r\n          </Card.Body>\r\n        </Card>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n\r\n    return newCarousel;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n      <Carousel slide={false} fade={false}>{createSlides()}</Carousel>\r\n      <hr></hr>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoriteCoins;\r\n","import {useState} from \"react\";\r\nimport RTPriceTable from \"./RTPriceTable\";\r\nimport FavoriteCoins from \"./FavoriteCoins\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction RTPriceFormattedTable({ favoriteCoins, setFavoriteCoins }) {\r\n  const columns = [\r\n    {\r\n      dataField: \"favorite\",\r\n      text: \"\",\r\n      formatter: starIconFormatter,\r\n    },\r\n    {\r\n      dataField: \"rank\",\r\n      text: \"Rank\",\r\n      sort: true,\r\n      defaultSortDirection: \"asc\",\r\n    },\r\n    {\r\n      dataField: \"img\",\r\n      text: \"Coin\",\r\n      formatter: imgFormatter,\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n      formatter: nameFormatter,\r\n    },\r\n    {\r\n      dataField: \"price\",\r\n      text: \"Price\",\r\n      sort: true,\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      dataField: \"amountChange\",\r\n      text: \"24hr Change\",\r\n      sort: true,\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      dataField: \"percentageChange\",\r\n      text: \"24hr % Change\",\r\n      sort: true,\r\n      formatter: percentFormatter,\r\n      hidden: true,\r\n    },\r\n    {\r\n      dataField: \"volume\",\r\n      text: \"24hr Volume\",\r\n      sort: true,\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      dataField: \"marketCap\",\r\n      text: \"Market Cap\",\r\n      sort: true,\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      dataField: \"valuation\",\r\n      text: \"Fully Diluted Val\",\r\n      sort: true,\r\n      formatter: priceFormatter,\r\n      hidden: true,\r\n    },\r\n    {\r\n      dataField: \"supply\",\r\n      text: \"Max Supply\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  const [iconColor, setIconColor] = useState(\"black\");\r\n\r\n  function handleclick(row) {\r\n    if (row === null) return;\r\n    var tempFaves = favoriteCoins;\r\n    tempFaves.push(row);\r\n    setFavoriteCoins([...tempFaves]);\r\n  }\r\n\r\n  function changeColor(){\r\n    if(iconColor === \"black\") {\r\n      setIconColor(\"blue\");\r\n    } else {\r\n      setIconColor(\"black\");\r\n    }\r\n    \r\n  }\r\n\r\n  function starIconFormatter(cell, row) {\r\n    if (cell === null) return <p></p>;\r\n    return (\r\n      <button className=\"btn favorite\" onClick={() => handleclick({ row })} style={{backgroundColor: \"transparent\"}}>\r\n      <FontAwesomeIcon\r\n        onClick={() => changeColor()}\r\n        icon={faStar}\r\n        style={{color: {iconColor}}}\r\n      >{cell}</FontAwesomeIcon></button>\r\n    );\r\n  }\r\n\r\n  function imgFormatter(cell, row) {\r\n    if (cell === null) return <p></p>;\r\n\r\n    return (\r\n      <img\r\n        src={cell}\r\n        alt={cell.symbol + \"logo\"}\r\n        className=\"coin-item\"\r\n        style={({ height: 2 + \"em\" }, { width: 2 + \"em\" })}\r\n      />\r\n    );\r\n  }\r\n  // Eric added in for navigating to results pages\r\n  function nameFormatter(cell, row){\r\n    if(cell === null) return <p></p>;\r\n    return (\r\n      <a href={\"/frontend-cryptodash/search/\" + row.id} className=\"anchor-name-item\">{cell}</a>\r\n    )\r\n  }\r\n\r\n  function priceFormatter(cell, row) {\r\n    if (cell === null) return <p></p>;\r\n\r\n    if (parseFloat(cell) < 999) {\r\n      return <p>{\"$\" + cell}</p>;\r\n    }\r\n    return <p>{\"$\" + parseFloat(cell.toFixed(2)).toLocaleString()}</p>;\r\n  }\r\n\r\n  function percentFormatter(cell, row) {\r\n    if (cell === null) return <p></p>;\r\n\r\n    return <p>{parseFloat(cell.toFixed(2)).toLocaleString() + \"%\"}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <RTPriceTable columns={columns} />\r\n      <FavoriteCoins faves={ favoriteCoins} setFavoriteCoins={setFavoriteCoins }/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RTPriceFormattedTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nexport default function LineChart (){\r\n    const axios = require('axios').default;  \r\n    const[coindata,setCoindata] = useState([]);\r\n    const[time,setTime] = useState([]);\r\n\r\n    const[chartdata,setChartData] = useState([]);\r\n    const[chartdates,setChartDates] = useState([]);\r\n    const[data7d,setData7d] = useState([]);\r\n    const[dates7d,setDates7d] = useState([]);\r\n    const[data24h,setData24h] = useState([]);\r\n    const[dates24h,setDates24h] = useState([]);\r\n\r\n    const FiveCoinsDataURL = ('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2Cethereum%2Cbinancecoin%2Ctether%2Ccardano&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=%271h%2C24h%27');\r\n  \r\n    useEffect(() => {\r\n        getCoinData();\r\n        const timer = setTimeout(() =>{\r\n            setTime(time +1);\r\n        },600000);\r\n        return () => clearTimeout(timer);\r\n    },[time]);\r\n    \r\n    \r\n    async function getCoinData(){\r\n       try{\r\n           const response = await axios.get(FiveCoinsDataURL); \r\n           setCoindata(response.data);     \r\n       }catch(error){\r\n           console.log(error);\r\n       }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let sparklines7d = {};\r\n        let sparklines24h = {};\r\n\r\n        coindata.forEach((element) => {\r\n            sparklines7d[element.name] = element.sparkline_in_7d.price;\r\n            let length = sparklines7d[element.name].length;\r\n            sparklines24h[element.name] = [24];\r\n            sparklines24h[element.name] = sparklines7d[element.name].slice(length-24);           \r\n        });\r\n        setData24h(sparklines24h);\r\n        setData7d(sparklines7d);\r\n\r\n    },[coindata])\r\n\r\n    function getFormattedDate(hour, day, newdate){\r\n        \r\n        let date = new Date();\r\n        date.setDate(date.getDate() - day);\r\n        let split_date = date.toString().split(\" \");\r\n        let split_time = split_date[4].toString().split(':');\r\n        let min_sec = split_time[1] + ':' + split_time[2];  \r\n\r\n        if(newdate.length === 0)\r\n            hour = split_time[0];    \r\n        \r\n        let new_time = hour + ':' + min_sec;\r\n        newdate = split_date[1] + ' ' + split_date[2] + ' ('+ new_time + ')';\r\n        hour++;\r\n        if(hour === 24){\r\n            hour = '00';\r\n            day--;\r\n        }\r\n        return {hour,day,newdate};\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let dates_7d =[''];\r\n        let dates_24h = [''];\r\n\r\n        if(data7d.length !== 0){\r\n            let date = {\r\n                hour:0,\r\n                day:7,\r\n                newdate:''\r\n            }\r\n        \r\n            let length;\r\n            if(Object.values(data7d)[0])\r\n                length = (Object.values(data7d)[0].length);\r\n            \r\n            date = getFormattedDate(date.hour,date.day,date.newdate);\r\n\r\n            for(let i = 0; i < length; i++){\r\n                date = getFormattedDate(date.hour,date.day,date.newdate);\r\n                dates_7d.push(date.newdate);\r\n            }\r\n            dates_24h = dates_7d.slice(length-23);\r\n           \r\n            setDates24h(dates_24h);\r\n            setDates7d(dates_7d);\r\n            setChartDates(dates_7d);\r\n            setChartData(data7d);\r\n\r\n        }\r\n    },[data7d])\r\n\r\n    function handle24h(){\r\n        setChartData(data24h);\r\n        setChartDates(dates24h);\r\n    }\r\n    function handle7d(){\r\n        setChartData(data7d);\r\n        setChartDates(dates7d);\r\n    }\r\n    const data = {\r\n        labels: Object.values(chartdates),\r\n        datasets: [\r\n          {\r\n            label: (Object.keys(chartdata)[0]),\r\n            data: (Object.values(chartdata)[0]),\r\n            fill: false,\r\n            backgroundColor: 'rgb(242, 169, 0)', \r\n            borderColor: 'rgba(77, 77, 78,0.2)',\r\n          },\r\n          {\r\n            label: (Object.keys(chartdata)[1]),\r\n            data: (Object.values(chartdata)[1]),\r\n            fill: false,\r\n            backgroundColor: 'rgb(60, 60, 61)',\r\n            borderColor: 'rgba(201, 157, 102,0.2)',\r\n          },\r\n          {\r\n            label: (Object.keys(chartdata)[4]),\r\n            data: (Object.values(chartdata)[4]),\r\n            fill: false,\r\n            backgroundColor: 'rgb(243, 186, 47)',\r\n            borderColor: 'rgba(48, 55, 54,0.2)',\r\n          },\r\n          {\r\n            label: (Object.keys(chartdata)[3]),\r\n            data: (Object.values(chartdata)[3]),\r\n            fill: false,\r\n            backgroundColor: 'rgb(42, 113, 208)',\r\n            borderColor: 'rgba(0,0,0,0.2)',\r\n          },\r\n          {\r\n            label: (Object.keys(chartdata)[2]),\r\n            data: (Object.values(chartdata)[2]),\r\n            fill: false,\r\n            backgroundColor: 'rgb(80,175,149)',\r\n            borderColor: 'rgba(92,91,94,0.2)',\r\n          },\r\n        ],\r\n      };\r\n      \r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },          \r\n      }],\r\n    },\r\n  };\r\n  return(\r\n    <div className=\"trading-chart\" style={{height:\"400px\",width:\"700px\",marginLeft:\"60px\",marginTop:\"50px\"}}>\r\n      <div className='header'>\r\n        <h1 className='title' style={{fontSize:\"25px\", fontFamily:\"sans-serif\"}}>Cryptocurrency Trading Rates</h1>\r\n        <button onClick={handle24h}>24h</button>\r\n        <button onClick={handle7d}>7d</button>\r\n      </div>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n","// import TradingChart from './TradingChart';\r\nimport RTPriceFormattedTable from \"../Tables/RTPriceFormattedTable\";\r\nimport TradingChart from \"../TradingChart\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Home = ({ favoriteCoins, setFavoriteCoins }) => {\r\n  return (\r\n    <div>\r\n      <RTPriceFormattedTable\r\n        favoriteCoins={favoriteCoins}\r\n        setFavoriteCoins={setFavoriteCoins}\r\n      />\r\n      <TradingChart />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { slide as Menu } from \"react-burger-menu\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class SlideMenu extends React.Component {\r\n  render() {\r\n    return (\r\n      <Menu isOpen={false} right disableCloseOnEsc disableAutoFocus>\r\n        <Link to=\"/\" id=\"home\" className=\"menu-item\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/search\" id=\"search\" className=\"menu-item\">\r\n          Search\r\n        </Link>\r\n        <Link to=\"/exchanges\" id=\"exchanges\" className=\"menu-item\">\r\n          Exchanges\r\n        </Link>\r\n        <Link to=\"/glossary\" id=\"glossary\" className=\"menu-item\">\r\n          Glossary \r\n        </Link>\r\n        <Link to=\"/about\" id=\"about\" className=\"menu-item\">\r\n          About\r\n        </Link>\r\n        <Link to=\"/resources\" id=\"resources\" className=\"menu-item\">\r\n          Resources\r\n        </Link>\r\n        <Link to=\"/contact\" id=\"contact\" className=\"menu-item\">\r\n          Contact Us\r\n        </Link>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport '../CoinInfo.css';\r\nconst CoinInfoHeader = ({_id, _name, _img}) =>{\r\n    // Not set to real time yet. Just grabs real time data on initial load.\r\n    const [realTimePrice, setRealTimePrice] = useState();\r\n    \r\n    useEffect(() =>{\r\n        let priceUrl = 'https://api.coingecko.com/api/v3/simple/price?ids=' + _id + '&vs_currencies=usd';\r\n        axios.get(priceUrl)\r\n        .then(response => {\r\n            setRealTimePrice(response.data[_id].usd)\r\n        })\r\n        .catch(error => console.log(error + \": Cannot get realtime price\"));\r\n    }, [_id, _name, realTimePrice]);\r\n\r\n    const priceFormat = () =>{\r\n        return realTimePrice % 2 === 0 ? realTimePrice.toLocaleString() : realTimePrice;\r\n    }\r\n  \r\n    return (\r\n        <div className=\"result-header-container\" key={_id}>\r\n            <div className=\"image-name-container\">\r\n                <span><img src={_img} alt={_id + ' logo'} /></span>\r\n                <span >{_name}</span>\r\n            </div>\r\n            <div className=\"price-percent-container\">\r\n                <span >{\"$\" + priceFormat()}</span> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinInfoHeader","import React from 'react';\r\nimport TradingViewWidget, {Themes} from 'react-tradingview-widget';\r\n\r\nconst TradingViewGraph = ({symbol}) =>{\r\n    return(\r\n       <div key={symbol + \"_graph\"}>\r\n            <TradingViewWidget \r\n            symbol={symbol + \"USD\"} \r\n            range=\"all\" \r\n            interval=\"D\" \r\n            theme={Themes.LIGHT}/>\r\n       </div>\r\n   ) \r\n}\r\n\r\nexport default TradingViewGraph;","import React, {useEffect, useState} from 'react';\r\n\r\nconst MarketInfo = (props) =>{\r\n    const [marketData, setMarketData] = useState();\r\n\r\n    useEffect(() => {\r\n        setMarketData(props.data);\r\n    }, [props.data]);\r\n\r\n    // Helper functions\r\n    function isFloat(n) {\r\n        return n === +n && n !== (n|0);\r\n    }\r\n    \r\n    function isInteger(n) {\r\n        return n === +n && n === (n|0);\r\n    }\r\n\r\n    return(\r\n        <div className=\"market-data-container\">\r\n            <div className=\"data-container\">\r\n                {marketData && Object.keys(marketData).slice(5, 24).map((key, index) =>{\r\n                    // Will be the name of the market data item\r\n                    let percentIndicator = false;\r\n                    let dateIndicator = false;\r\n                    let spacedKey = key.split('_');\r\n                    if(spacedKey.includes('percentage')){\r\n                        percentIndicator = true;\r\n                    }\r\n                    else if(spacedKey.includes('date')){\r\n                        dateIndicator = true;\r\n                    }\r\n                    spacedKey = spacedKey.join(' ');\r\n                    let capitalizedKey = spacedKey.charAt(0).toUpperCase() + spacedKey.slice(1);\r\n\r\n                    // Set to N/A if null\r\n                    if(marketData[key] === null){\r\n                        return (\r\n                            <div>\r\n                                <span className=\"data-key\">{capitalizedKey + \": \"}</span>\r\n                                <span className=\"data-value\">N/A</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else if(dateIndicator){\r\n                        let date = marketData[key].split('T');\r\n                        return (\r\n                            <div>\r\n                                <span className=\"data-key\">{capitalizedKey + \": \"}</span>\r\n                                <span className=\"data-value\">{date[0]}</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else if(isInteger(marketData[key])) {\r\n                        return (\r\n                            <div>\r\n                                <span className=\"data-key\">{capitalizedKey + \": \"}</span>\r\n                                <span className=\"data-value\">{marketData[key].toLocaleString()}</span>\r\n                            </div>\r\n                        )\r\n\r\n                    }\r\n                    else if(isFloat(marketData[key])) {\r\n                        if(percentIndicator){\r\n                            return (\r\n                                <div>\r\n                                    <span className=\"data-key\">{capitalizedKey + \": \"}</span>\r\n                                    <span className=\"data-value\">{marketData[key].toFixed(3) + \"%\"}</span>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <div>\r\n                                <span className=\"data-key\">{capitalizedKey + \": \"}</span>\r\n                                <span className=\"data-value\">{parseFloat(marketData[key].toFixed(20)).toLocaleString()}</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <span className='data-key'>{capitalizedKey + \": \"}</span>\r\n                            <span className=\"data-value\">{marketData[key]}</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarketInfo;","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TradeableExchanges = ({id}) =>{\r\n    const [exchangeData, setExchangeData] = useState({});\r\n    const [dataLoaded, setDataLoaded] = useState(false);\r\n    const url = 'https://api.coingecko.com/api/v3/coins/' + id + '?tickers=true&market_data=false&community_data=false&developer_data=false&sparkline=false';\r\n\r\n\r\n    async function getExchangeData(){\r\n        const response = await axios.get(url);\r\n        return response.data;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getExchangeData()\r\n        .then(data => {\r\n            setExchangeData(data.tickers);\r\n            setDataLoaded(true);\r\n        })\r\n        .catch(error => {\r\n            console.log(error.message + \" for \" + id);\r\n            setDataLoaded(false);\r\n        });\r\n    }, [id]);\r\n            \r\n    return (\r\n        <div className=\"tradeable-exchanges-container\">\r\n            <ul>\r\n                {dataLoaded && Object.keys(exchangeData).slice(0, 4).map(key => {\r\n                    let trade_url = exchangeData[key].trade_url;\r\n                    let name = exchangeData[key].market.name;\r\n                    return (<li><a href={trade_url} target=\"_blank\" rel=\"noopener noreferrer\" >{name}</a></li>)\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default TradeableExchanges;","import React, {useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport CoinInfoHeader from './CoinInfoComponents/CoinInfoHeader';\r\nimport TradingViewGraph from './CoinInfoComponents/TradingViewGraph';\r\nimport MarketInfo from './CoinInfoComponents/MarketInfo';\r\nimport TradeableExchanges from './CoinInfoComponents/TradeableExchanges';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport {Card} from 'react-bootstrap';\r\nimport './CoinInfo.css';\r\n\r\nconst PageNotFound = () =>{\r\n    return (\r\n        <div className=\"page-not-found\">\r\n            <h1>Page Not Found</h1>\r\n            <p>Sorry, there is nothing to see here.</p>\r\n            <p><Link to=\"/\">Back to Home</Link></p>\r\n        </div> )\r\n}\r\n\r\nconst CoinInfo = (props) =>{\r\n    const {id} = useParams();\r\n    const dataUrl = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=' + id + '&order=market_cap_desc&per_page=100&page=1&sparkline=false';\r\n    const descriptionUrl = 'https://api.coingecko.com/api/v3/coins/' + id +'?tickers=false&market_data=false&developer_data=false';\r\n    const [basicInfo, setBasicInfo] = useState({});\r\n    const [description, setDescription] = useState(\"\");\r\n    \r\n    /* get image and name based on id */\r\n    useEffect(() => {\r\n        axios.get(dataUrl)\r\n        .then(response =>{\r\n            setBasicInfo(response.data[0]);\r\n        })\r\n        .catch(error => console.log(error));\r\n        axios.get(descriptionUrl)\r\n        .then(response =>{\r\n            setDescription(response.data.description.en);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, [dataUrl, descriptionUrl]);\r\n\r\n    /* Check if there is a discription */\r\n    const checkDescription = () =>{\r\n        if(description === \"\" || description === null) return false;\r\n        return true;\r\n    }\r\n\r\n    const parseDescription = () =>{\r\n        const descriptionEl = description\r\n        .split(\"https://www.coingecko.com/en/coins/\")\r\n        .join(\"/frontend-cryptodash/search/\")\r\n        .split(\"/coins/\")\r\n        .join(\"/frontend-cryptodash/search/\")\r\n        .split('\">')\r\n        .join('\" target=\"_blank\" rel=\"noopener noreferrer\">');\r\n        /* target=\"_blank\" rel=\"noopener noreferrer\" */\r\n\r\n        return ReactHtmlParser(descriptionEl);\r\n    }\r\n\r\n    const nameUndefined = () => {\r\n        if(basicInfo === undefined){\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    /* use flex, divide into at least 3 different divs*/\r\n    return (\r\n        <div>\r\n        {nameUndefined() ? <PageNotFound /> : \r\n           <div> \r\n            <Card className=\"coin-info-card\">\r\n                <Card.Header className=\"result-header\">\r\n                    <CoinInfoHeader _id={id} _name={basicInfo.name} _img={basicInfo.image}/>\r\n                </Card.Header> \r\n                <Card.Body>\r\n                    <TradingViewGraph symbol={basicInfo.symbol} />\r\n                </Card.Body>\r\n            </Card>\r\n            <Card className=\"coin-info-card\">\r\n                <Card.Header>\r\n                    <h1>Market Data</h1> \r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <MarketInfo data={basicInfo}/>\r\n                </Card.Body> \r\n            </Card>\r\n            <Card className=\"coin-info-card\">\r\n                <Card.Header>\r\n                    <h1>Description</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"description-box\">\r\n                        {checkDescription() ? <div>{parseDescription()}</div> : null}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card className=\"coin-info-card\">\r\n                <Card.Header>\r\n                    <h1>Exchanges</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <TradeableExchanges id={id} />\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CoinInfo;","import React, {useState} from 'react';\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport \"./SearchBar.css\";\r\nimport CoinInfo from '../CoinPages/CoinInfo';\r\nimport {Link, Route, Switch} from 'react-router-dom';\r\n\r\nconst SearchBar = (props) =>{\r\n    /* display may not be necessary, just hides suggestions when no input field*/\r\n    const [display, setDisplay] = useState(true);\r\n    /* list of suggestions displayed */\r\n    const [suggestions, setSuggestions] = useState([]);\r\n\r\n    const inputOnChange = (event) =>{\r\n        event.preventDefault();\r\n        /* if no input, then hide suggestions */\r\n        if(event.target.value.length === 0){\r\n            setDisplay(false);\r\n        }\r\n        else{\r\n            setDisplay(true);\r\n            setSuggestions(props.coinsList.filter(coin => \r\n                (coin.name.toLowerCase().includes(event.target.value.toLowerCase()) || \r\n                coin.symbol.toLowerCase().includes(event.target.value.toLowerCase()) || \r\n                coin.id.toLowerCase().includes(event.target.value.toLowerCase()))))\r\n        }\r\n    }\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <div className=\"search-box\">\r\n            <div id=\"home-search-container\">\r\n                <input type=\"text\" className=\"form-control\" aria-label=\"Default\" \r\n                id=\"home-search\" placeholder=\"Search Crypto\" onChange={inputOnChange} />\r\n            </div>\r\n            <div id=\"suggestions-container\">\r\n                <ListGroup>\r\n                    {display && suggestions.slice(0, 6).map((coin, index) =>(\r\n                        <Link to={\"/search/\" + coin.id} key={coin.id}>\r\n                        <button type=\"button\" \r\n                        className=\"list-group-item list-group-item-action\" \r\n                        key={coin.id} \r\n                        onClick={() => {\r\n                            // Still need to work on re renders\r\n                            setDisplay(false);\r\n                        }}\r\n                        >\r\n                            <div className=\"name-container\">\r\n                                <span>\r\n                                    <img src={coin.image} alt={coin.name + \" logo\"}/>\r\n                                </span>\r\n                                <span className=\"name-span\">{coin.name}</span>\r\n                            </div>\r\n                            <div className=\"symbol-container\">\r\n                                <span >{coin.symbol.toUpperCase()}</span>\r\n                            </div>\r\n                        </button>\r\n                       </Link>\r\n                    ))}\r\n                </ListGroup>\r\n            </div>\r\n            </div>\r\n                <Switch>\r\n                    <Route path='/search/:id' children={<CoinInfo coinsList={props.coinsList}/>} />\r\n                </Switch>\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBar;\r\n\r\n","import './App.css';\r\nimport SearchBar from '../SearchBarHome/SearchBar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Search() {\r\n    let [coinsList, setCoinsList] = useState([]); \r\n    const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false';\r\n\r\n    /* Use effect in replace of componentDidMount() w/ Hooks */\r\n    useEffect(() => {\r\n        axios.get(url)\r\n        .then(res =>{\r\n            setCoinsList(res.data);\r\n        })\r\n        .catch(error => console.log(error))\r\n    }, []);  \r\n\r\n  return (\r\n    <div className=\"Search\">\r\n      <SearchBar coinsList={coinsList} />\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Search;","import axios from 'axios';\r\nimport React,{useState,useEffect} from 'react';\r\nimport ReactTable from 'react-table-6';\r\nimport 'react-table-6/react-table.css';\r\nimport './CryptoExchanges.css';\r\n\r\nexport default function ExchangesTable(){\r\n\r\n    const[exchangedata,setExchangedata] = useState([]);\r\n    const[data,setData] = useState([]);\r\n   \r\n    const exchangeurl = ('https://api.coingecko.com/api/v3/exchanges');\r\n\r\n    useEffect(() => {\r\n        getExchanges();\r\n    }, [])\r\n\r\n    async function getExchanges(){\r\n        try{\r\n            const response = await axios.get(exchangeurl);\r\n            setExchangedata(response.data);\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(exchangedata){\r\n            let data = [];        \r\n            for( let index in exchangedata){\r\n                data[index] = {\r\n                    logo: exchangedata[index].image,\r\n                    name: exchangedata[index].name,\r\n                    site: exchangedata[index].url\r\n                }\r\n            }\r\n         setData(data); }\r\n    },[exchangedata]) \r\n\r\n         const columns = [{\r\n             \r\n             Header: 'Logo ',\r\n             accessor: 'logo',\r\n             Cell: ({ value } ) => (\r\n                <img\r\n                  src={value}\r\n                  alt={''}\r\n                />\r\n              ),\r\n              width: 65                   \r\n         },{\r\n             Header: 'Name',\r\n             accessor: 'name',\r\n            Cell:({value}) =>(\r\n                <div style={{textAlign: 'center'}}>\r\n                    {value}\r\n                </div>\r\n            )\r\n         },{\r\n             Header: 'Website',\r\n             accessor: 'site',\r\n             Cell:({value}) =>(   \r\n                <div style={{textAlign: 'center'}}>   \r\n                    <a href={value} >\r\n                        {value}\r\n                    </a>\r\n                </div>\r\n             )\r\n         }]\r\n\r\n        return(\r\n            <div>\r\n                <ReactTable\r\n                   data={data}\r\n                   columns={columns}\r\n                   showPagination={true}\r\n                   defaultPageSize={10}\r\n                />         \r\n            </div>\r\n        )\r\n    \r\n}\r\n","import CryptoExchanges from '../Exchanges/CryptoExchanges';\r\nconst Exchanges = () => {\r\n    return ( \r\n        <div>\r\n            <CryptoExchanges />\r\n        </div>\r\n       \r\n     );\r\n}\r\n \r\nexport default Exchanges;","import { Container } from \"react-bootstrap\";\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Container className=\"justify-content-center resources-page\">\r\n      <h2 style={{ textAlign: \"center\", margin: 2 + \"em\" }}>About</h2>\r\n      <img\r\n        className=\"img-fluid rounded mx-auto d-block about-img\"\r\n        src=\"https://www.moneycrashers.com/wp-content/uploads/2016/02/array-cryptocurrency-coins-1068x713.jpg\"\r\n        alt=\"Coins\"\r\n        style={{ height: \"auto\", width: 50 + \"vw\" }}\r\n      ></img>\r\n\r\n      <p>\r\n        CryptoDash is a React dashboard application that provides highlighted,\r\n        in-depth information for monitoring cryptocurrencies in a streamlined,\r\n        at-a-glance interface, providing easy navigation for all users.\r\n      </p>\r\n\r\n      <h3>Features</h3>\r\n      <ul>\r\n        <li>Real time price in USD for each cryptocurrency</li>\r\n        <li>Percentage change for each cryptocurrency</li>\r\n        <li>Charts including historical data</li>\r\n        <li>Crypto pair information</li>\r\n        <li>Percent total crypto market performance</li>\r\n        <li>\r\n          Overlapping graph of multiple cryptocurrency trading rates in USD\r\n        </li>\r\n        <li>\r\n          Options for saving your favorite crypto and crypto pair data on\r\n          dashboard\r\n        </li>\r\n        <li>Search for data on specific coins</li>\r\n        <li>Glossary of common crypto terms</li>\r\n        <li>Additional educational resources</li>\r\n      </ul>\r\n\r\n      <h3>Source</h3>\r\n      <a\r\n        className=\"resource-link\"\r\n        href=\"https://github.com/csavella/frontend-cryptodash\"\r\n      >\r\n        Link to GitHub\r\n      </a>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { Container } from \"react-bootstrap\";\r\nimport \"./Resources.css\";\r\n\r\nconst Resources = () => {\r\n  return (\r\n    <Container className=\"resources-page\">\r\n      <h2 style={{ textAlign: \"center\", margin: 2 + \"em\" }}>\r\n        Cryptocurrency Resources\r\n      </h2>\r\n\r\n      <h3>Latest News</h3>\r\n      <ul>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"https://www.coindesk.com/\">\r\n            CoinDesk\r\n          </a>\r\n          : Global media platform for digital currencies\r\n        </li>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"https://www.ccn.com/\">\r\n            CCN\r\n          </a>\r\n          : Monitor and check on cryptocurrency scams\r\n        </li>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"https://nulltx.com/\">\r\n            Null Tx\r\n          </a>\r\n          : Latest news and educational content\r\n        </li>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"http://newsbtc.com/\">\r\n            NEWSBTC\r\n          </a>\r\n          : News on all presently-trading cryptocurrencies\r\n        </li>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"https://bitcoinist.com/\">\r\n            Bitcoinist\r\n          </a>\r\n          : Blockchain, cryptocurrency, bitcoin\r\n        </li>\r\n      </ul><br></br>\r\n\r\n      <h3>Mining Estimation Tools</h3>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.coinwarz.com/mining/calculators\"\r\n          >\r\n            Coin Warz\r\n          </a>\r\n          : Profitability and calculators\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://whattomine.com/calculators\"\r\n          >\r\n            What to Mine\r\n          </a>\r\n          : Profitability and calculators\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://cryptomining.tools/calculator\"\r\n          >\r\n            Crypto Mining Tools\r\n          </a>\r\n          : Estimate difficulty of mining and possible profitability\r\n        </li>\r\n      </ul><br></br>\r\n\r\n      <h3>Blockchain Development</h3>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://github.com/jpmorganchase/cakeshop\"\r\n          >\r\n            Cake Shop\r\n          </a>\r\n          : Local blockchain development\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://github.com/apache/incubator-tuweni\"\r\n          >\r\n            Tuweni\r\n          </a>\r\n          : Library to aid in deveopment of blockchain and other decentralized\r\n          software\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://github.com/ethereum/mist/releases\"\r\n          >\r\n            Mist\r\n          </a>\r\n          : Full node wallet. Created by Ethereum\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://geth.ethereum.org/docs/getting-started\"\r\n          >\r\n            Geth\r\n          </a>\r\n          : Create smart contacts, mining, tokens, etc\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://remix.ethereum.org/#optimize=false&evmVersion=null\"\r\n          >\r\n            Remix IDE\r\n          </a>\r\n          : Create solidity contracts. Increased IDE functionality\r\n        </li>\r\n      </ul><br></br>\r\n\r\n      <h3>Wallets</h3>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://shop.ledger.com/products/ledger-nano-x?source=aw&awc=17181_1622437870_8867004a1ef3ddddd1021e85771c9e3b&utm_source=awin&utm_campaign=617983\"\r\n          >\r\n            Ledger Nano\r\n          </a>\r\n          : Hardware wallet. Compatible with Android, desktop computer, and iOS\r\n        </li>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"https://www.bitlox.com/\">\r\n            Bitlox\r\n          </a>\r\n          : User-friendly hardware wallet\r\n        </li>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"https://atomicwallet.io/\">\r\n            Atomic Wallet\r\n          </a>\r\n          : Software wallet. Supports over 300 cryptocurrencies\r\n        </li>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"https://www.infinitowallet.io/\">\r\n            Infinito Wallet\r\n          </a>\r\n          : Software wallet. Faster Transactions on global scale\r\n        </li>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"https://www.bitcoinarmory.com/\">\r\n            Armory\r\n          </a>\r\n          : Software wallet. Compatible with Mac, Linux, and Windows. Tight\r\n          security system\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://ripplecoinnews.com/go/guarda-wallet\"\r\n          >\r\n            Guarda Wallet\r\n          </a>\r\n          : Software wallet. Includes more than 10,000 tokens and 40 well-known\r\n          blockchains\r\n        </li>\r\n      </ul><br></br>\r\n\r\n      <h3>YouTube Channels and Podcasts</h3>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.youtube.com/channel/UCqK_GSMbpiV8spgD3ZGloSw\"\r\n          >\r\n            Coin Bureau\r\n          </a>\r\n          : YouTube channel that provides educational videos for cryptocurrency\r\n          newbies\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.youtube.com/channel/UCwsRWmIL5XKqFtdytBfeX0g\"\r\n          >\r\n            Crypto Crow\r\n          </a>\r\n          : YouTube channel that provides news and Updates on Cryptocurrencies,\r\n          blockchains, and ICOs\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.youtube.com/channel/UCRQkQ8YlIY2LlTWGjdo1Opw\"\r\n          >\r\n            Cryptosomniac\r\n          </a>\r\n          : YouTube channel that provides updates on cryptocurrency news and\r\n          trading. Educational Crypto content\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.youtube.com/channel/UCd4bJKIvbGOIAT-GK4K-3_w\"\r\n          >\r\n            Digital Gold\r\n          </a>\r\n          : YouTube channel that provides news and updates on mining\r\n        </li>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"https://unchainedpodcast.com/\">\r\n            Unchained\r\n          </a>\r\n          : Podcast that provides news on a weekly basis\r\n        </li>\r\n        <li>\r\n          <a className=\"resource-link\" href=\"https://badcryptopodcast.com/\">\r\n            Bad Crypto\r\n          </a>\r\n          : Global podcast that provides information about ICOs, Blockchain,\r\n          Ethereum, etc.\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://ledgerstatus.com/topic/ledgercast/\"\r\n          >\r\n            Ledger Cast\r\n          </a>\r\n          : Content on Blockchain and Cryptocurrency community\r\n        </li>\r\n      </ul><br></br>\r\n\r\n      <h3>Books and Courses</h3>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.amazon.com/gp/product/1979688362/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=coindiligent-20&creative=9325&linkCode=as2&creativeASIN=1979688362&linkId=cda5776063dba5e46022e9bf32eb5df8\"\r\n          >\r\n            Cryptocurrency Investing Bible by Alan T. Norman\r\n          </a>\r\n          : Cryptocurrency community for beginners\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.amazon.com/Blockchain-Basics-Non-Technical-Introduction-Steps/dp/1484226038/ref=asc_df_1484226038/?tag=hyprod-20&linkCode=df0&hvadid=312140868236&hvpos=&hvnetw=g&hvrand=9035098506546313839&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=9032828&hvtargid=pla-315913527774&psc=1\"\r\n          >\r\n            Blockchain Basics: A Non-Technical Introduction in 25 Steps by\r\n            Daniel Drescher\r\n          </a>\r\n          : Basic information and foundation on Blockchain and Cryptocurrency\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.amazon.com/gp/product/B07DKVJJV8/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=nathanrose-20&creative=9325&linkCode=as2&creativeASIN=B07DKVJJV8&linkId=22d428d2e717810e0cbe717dd9906104\"\r\n          >\r\n            The Crypto Intro: Guide To Mastering Bitcoin, Ethereum, Litecoin,\r\n            Cryptoassets, Blockchain &amp; Cryptocurrency Investing (Alternative\r\n            Finance Series) by Nathan Rose\r\n          </a>\r\n          : Cryptocurrency exchange, digital tokens, cryptocurrency wallets\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.amazon.com/gp/product/1119473861/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=coindiligent-20&creative=9325&linkCode=as2&creativeASIN=1119473861&linkId=b5084f43715eb249ef9b997f7f664af3\"\r\n          >\r\n            The Bitcoin Standard: The Decentralized Alternative to Central\r\n            Banking by Saifedean Ammous\r\n          </a>\r\n          : One of the most popular book on cryptocurrency\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.amazon.com/Internet-Money-Andreas-M-Antonopoulos/dp/1537000454\"\r\n          >\r\n            The Internet of Money: A collection of talks by Andreas M.\r\n            Antonopoulos by Andreas Antonopoulos\r\n          </a>\r\n          : Explores the technical functioning of the bitcoin network by\r\n          illuminating bitcoin's philosophical, social, and historical\r\n          implications\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.udemy.com/course/cryptocurrency-trading/?LSNPUBID=vedj0cWlu2Y&ranEAID=vedj0cWlu2Y&ranMID=39197&ranSiteID=vedj0cWlu2Y-ADtDteHrkdeq9hAoNIxCDg&utm_medium=udemyads&utm_source=aff-campaign\"\r\n          >\r\n            Cryptocurrency Trading: Complete Guide To Trading Altcoins\r\n          </a>\r\n          : Online course. Learn about the community of cryptocurrency and\r\n          methods to avoid scams and hacks\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.unic.ac.cy/blockchain/free-mooc/\"\r\n          >\r\n            DFIN 511: Introduction to Digital Currencies\r\n          </a>\r\n          : Online course, free of cost. Launched by University of Nicosia\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://developer.ibm.com/tutorials/cl-ibm-blockchain-101-quick-start-guide-for-developers-bluemix-trs/\"\r\n          >\r\n            IBM Blockchain 101: Quick-start guide for developers\r\n          </a>\r\n          : Online course for crypto developers\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.udemy.com/course/cryptocurrency-wallet/?LSNPUBID=vedj0cWlu2Y&ranEAID=vedj0cWlu2Y&ranMID=39197&ranSiteID=vedj0cWlu2Y-mrAuKtZOhjgG.8A3DeoYWA&utm_medium=udemyads&utm_source=aff-campaign\"\r\n          >\r\n            Cryptocurrency Wallets Course: Secure Your Cryptos Safely\r\n          </a>\r\n          : Learn everything about Cryptocurrency security\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://www.udemy.com/course/draft/718338/?LSNPUBID=vedj0cWlu2Y&ranEAID=vedj0cWlu2Y&ranMID=39197&ranSiteID=vedj0cWlu2Y-_5ZWFLWrp__u1ETHWRrsZw&utm_medium=udemyads&utm_source=aff-campaign\"\r\n          >\r\n            How to Join the Bitcoin Revolution\r\n          </a>\r\n          : Detailed courses on Bitcoin basics. Financial system, scams, hacks,\r\n          etc.\r\n        </li>\r\n      </ul><br></br>\r\n\r\n      <h3>Forums</h3>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://emerging.technology/\"\r\n          >\r\n            Emerging Technology\r\n          </a>\r\n          : Discussions about earning money with Crypto, Blockchain, AI, VR, 3D Printing, Drones, etc.\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://cryptorum.com/\"\r\n          >\r\n            Cryptorum\r\n          </a>\r\n          : Around 70 threads available. Educational forum on cryptocurrency\r\n        </li>\r\n        <li>\r\n          <a\r\n            className=\"resource-link\"\r\n            href=\"https://steemit.com/\"\r\n          >\r\n            Steemit\r\n          </a>\r\n          : The first global social network in the cryptocurrency sector\r\n        </li>\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Resources;\r\n","import React, {useState} from 'react';\r\nimport {FaArrowCircleUp} from 'react-icons/fa';\r\n  \r\nconst ScrollToTop = () =>{\r\n  \r\n  const [visible, setVisible] = useState(false)\r\n  \r\n  const toggleVisible = () => {\r\n    const scrolled = document.documentElement.scrollTop;\r\n    if (scrolled > 300){\r\n      setVisible(true)\r\n    } \r\n    else if (scrolled <= 300){\r\n      setVisible(false)\r\n    }\r\n  };\r\n  \r\n  const scrollToTop = () =>{\r\n    window.scrollTo({\r\n      top: 0, \r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n  \r\n  window.addEventListener('scroll', toggleVisible);\r\n  \r\n  return (\r\n    <button className=\"go-to-top\">\r\n     <FaArrowCircleUp onClick={scrollToTop} \r\n     style={{display: visible ? 'inline' : 'none' , marginBottom: 1.5 + \"em\"}} />\r\n    </button>\r\n  );\r\n}\r\n  \r\nexport default ScrollToTop;","import React from 'react';\r\nimport './Glossary.css';\r\nimport data from './Glossary.json';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Glossary = () =>{\r\n    /* When letter is clicked at top, will scroll to\r\n    designated element containing letter in page */\r\n    const handleScroll = (e) =>{\r\n        document.getElementById(\"item-\" + e.target.value).scrollIntoView();\r\n    }\r\n\r\n    return(\r\n        <div className=\"glossary-container\">\r\n            <div className=\"glossary-header-container\">\r\n                {Object.keys(data).map(key => {\r\n                    return(\r\n                        <span><input type=\"button\" className=\"letter-nav bg-light\" value={key} onClick={e => handleScroll(e)}/></span>\r\n                    )\r\n                })}\r\n            </div>\r\n                {Object.keys(data).map(key => {\r\n                    return(\r\n                        <div className=\"glossary-body-container\">\r\n                            <div className={\"item\"} id={\"item-\" + key}><h1>{key}</h1></div>\r\n                            <div className={\"item-definitions\"}>\r\n                                {Object.keys(data[key]).map(item => {\r\n                                    return(\r\n                                        <div className={\"definition-\" + data[key][item].term + \"-container\"}>\r\n                                            <div className={\"term\"}><span>{data[key][item].term + \":\"}</span></div>\r\n                                            <div className={\"definition\"}><span>{data[key][item].description}</span></div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n        </div>\r\n    )\r\n}\r\nexport default Glossary;","import emailjs from \"emailjs-com\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useState } from \"react\";\r\n\r\nconst Contact = () => {\r\n  const [emailAddress, setEmailAdress] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  function sendMessage() {\r\n    console.log(\"Name: \" + fullName);\r\n    console.log(\"Email: \" + emailAddress);\r\n    console.log(\"Message: \" + message);\r\n  }\r\n\r\n  function handleNameChange(value) {\r\n    setFullName(value);\r\n  }\r\n  function handleEmailChange(value) {\r\n    setEmailAdress(value);\r\n  }\r\n  function handleMessageChange(value) {\r\n    setMessage(value);\r\n  }\r\n\r\n  function checkEmailAddress() {\r\n    var email_regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/i;\r\n    if(emailAddress.match(email_regex)) {\r\n        return true;\r\n    }\r\n    alert(\"Error: please enter a valid email address\")\r\n    return false;\r\n}\r\n\r\n  function sendEmail() {\r\n    var templateParams = {\r\n      to_name: \"Chasity Savella, Eric Anderson, Chiharu Akiyama\",\r\n      from_name: \"CryptoDash App\",\r\n      fullname: fullName,\r\n      email: emailAddress,\r\n      message: message,\r\n    };\r\n\r\n    if(fullName === \"\"){\r\n      alert(\"ERROR: Name is required.\");\r\n      return;\r\n    }\r\n\r\n    if(emailAddress === \"\") {\r\n      alert(\"ERROR: Email is required.\");\r\n      return;\r\n    }\r\n\r\n    if(!checkEmailAddress()){\r\n      return;\r\n    }\r\n\r\n    emailjs\r\n      .send(\r\n        \"csavella_frontend\",\r\n        \"template_xwnwtxf\",\r\n        templateParams,\r\n        \"user_7mBuykiL1mjdR966UDCWz\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(\"SUCCESS!\", result.status, result.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n\r\n    alert('Thank you! We received your message and we will get back to you back ASAP.');\r\n  }\r\n\r\n  return (\r\n    <div className=\"contact-us container\">\r\n      <div className=\"row contact-form z-depth-1\">\r\n        <div className=\"col\">\r\n          <div className=\"col-md-auto\">\r\n            <h2 style={{ textAlign: \"center\", margin: 2 + \"em\" }}>\r\n              Send us a message!\r\n            </h2>\r\n            <Form>\r\n              <Form.Group style={{ marginBottom: 1 + \"em\" }}>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  as=\"input\"\r\n                  placeholder=\"Enter full name\"\r\n                  onChange={(e) => handleNameChange(e.target.value)}\r\n                  required\r\n                />\r\n                <Form.Text\r\n                  id=\"fullName\"\r\n                  name=\"fullName\"\r\n                  value={fullName}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group style={{ marginBottom: 1 + \"em\" }}>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  as=\"input\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => handleEmailChange(e.target.value)}\r\n                  required\r\n                />\r\n                <Form.Text\r\n                  id=\"emailAddress\"\r\n                  name=\"emailAddress\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  value={emailAddress}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group style={{ marginBottom: 1 + \"em\" }}>\r\n                <Form.Label>Message</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  id=\"message\"\r\n                  value={message}\r\n                  onChange={(e) => handleMessageChange(e.target.value)}\r\n                  placeholder=\"Type a message\"\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"dark\"\r\n                className=\"btn btn-dark btn-block\"\r\n                onClick={() => sendEmail()}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport Navbar from \"../Navigation/Navbar\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport BurgerMenu from \"../Navigation/BurgerMenu\";\r\nimport Search from \"./Search\";\r\nimport Exchanges from \"./Exchanges\";\r\nimport About from \"./About\";\r\nimport Resources from \"./Resources\";\r\nimport ScrollToTop from \"../Navigation/ScrollToTop\";\r\nimport Glossary from \"../Glossary/Glossary\";\r\nimport Contact from \"./Contact\";\r\n\r\nfunction App() {\r\n  const [favoriteCoins, setFavoriteCoins] = useState([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Navbar />\r\n        <BurgerMenu />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home\r\n              favoriteCoins={favoriteCoins}\r\n              setFavoriteCoins={setFavoriteCoins}\r\n            />\r\n          </Route>\r\n          <Route path=\"/search\">\r\n            <Search />\r\n          </Route>\r\n          <Route path=\"/exchanges\">\r\n            <Exchanges />\r\n          </Route>\r\n          <Route path=\"/glossary\">\r\n            <Glossary />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/resources\">\r\n            <Resources />\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <Contact />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      <ScrollToTop />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/Pages/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}